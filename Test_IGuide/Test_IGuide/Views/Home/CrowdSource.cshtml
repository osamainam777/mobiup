@{
    ViewBag.Title = "Crowd Source";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>
@model Test_IGuideModels.RootObject
    <script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>

    <!-- To ensure the correct display of map components-->
    <style>
        #map_canvas img {
            max-width: none;
        }

    </style>

    <!-- Properties of pop up opened when a blue marker is clicked -->
    <style>
        .infoDiv {
            height: 200px;
            width: 300px;
            -webkit-user-select: none;
            background-color: white;
        }
    </style>

    <!-- Section of page which contains google map -->
    <div id="map_canvas" style="height: 600px;"></div>

    @section scripts {
        <section class="scripts">

            <script type="text/javascript">

    //<!-- execute intialize method only when page is loaded -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        
        google.maps.visualRefresh = true; //Refresh Google map and display refreshed map.
        var cordinates = new google.maps.LatLng(31.422437640561725, 73.07725667953491);

        // Map options which will be accounted when map loads
        var MapOptions = {
            zoom: 14,
            center: cordinates,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), MapOptions);
        //Marker CLICK
        /*google.maps.event.addListener(map, 'click', function (event) {
            placeMarker(event.latLng);

        });*/

        
        for (var i in marker) {
            marker[i].setAnimation(null);
            if (marker[i].id == item.id) marker[i].setAnimation(google.maps.Animation.BOUNCE);
        }

        // To drop a marker of cgreen color on current location
        //var myLatlng = new google.maps.LatLng(31.422437640561725, 73.07725667953491);

        var marker = new google.maps.Marker({
            position: cordinates,
            map: map,
            title: 'Current Choice'
        });

        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')

        
        // var data = [];

        var data = [
           @foreach(var ven in Model.response.venues){
               <text>
                 {  "PlaceName": "@ven.name", "OpeningHours": "@ven.location.distance.ToString()", "GeoLong": @ven.location.lat, "GeoLat": @ven.location.lng },
               </text>
               
           }    
        ];
       



        // To drop marker pins
        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.PlaceName
            });

          
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

            
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</h2>" + "<div><h4>Distance :" + item.OpeningHours + "</h4></div></div>"
            });

            // Adding onclick listener
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

        })
    }


</script>
        </section>
    }


